TODO

* garbage collection that isn't unusable slow. (Just call infrequently.)
* read & eval
* repl written in scheme.
* Callers shouldn't cons function arguments onto the stack.
* Useful compiler errors.
* Stack traces.
* (letrec
* (set!
* (set-car!
* (set-cdr! 
* Standard library.
* Smarter parser (unmatched (
* Floating point and division.
* call/cc
* Macros
* Add #!Run lines to compiler output.
* Scheme Comments

DONE

* Varargs for +, -, *, etc.
* Tail call optimisation.
* Formatting for display of objects (esp references).
* Test system.
* Compiler should produce VM ready code, replace mis-named Assemble.hs with disk serialisation/deserialisation.
* (and & (or
* IO
* (begin
* (lambda (x . y)
* (cond
* (let
* (let*
* Boolean literals
* (lambda x
* Mutable Cons Cells
* Garbage Collection
* Support comments in vmcode files
* Strings
